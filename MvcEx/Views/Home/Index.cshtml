@model List<MvcEx.Models.Books>

<!DOCTYPE html>
<html>
<head>
    <title>Писательская платформа</title>
</head>
<body>
    <h1>Добро пожаловать на писательскую платформу</h1>
    <p>Привет, @User.Identity.Name! Ты в системе.</p>
     <form asp-controller="Account" asp-action="UpdateUsername" method="post">
        <input type="text" name="newUsername" placeholder="Enter new username">
        <button type="submit">Change Username</button>

      

        @{
    var successMessage = TempData["SuccessMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        alert("@successMessage");
    </script>
}
        @Html.AntiForgeryToken()
    </form>
    <form asp-controller="Account" asp-action="DeleteUser" method="post">
        <button type="submit" class="btn btn-danger">Delete User</button>
    </form>
      <form method="get" action="@Url.Action("AddBook", "Home")">
            @Html.AntiForgeryToken()
            <button type="submit">Добавить книгу</button>
        </form>
    @using (Html.BeginForm("Search", "Home", FormMethod.Get))
    {
        <input type="text" name="searchTerm" placeholder="Введите название книги">
        <input type="submit" value="Поиск">
    }

    <!-- Ссылка для сортировки по рейтингу -->
    @Html.ActionLink("Сортировать по рейтингу", "SortByRating")


    <h2>Список рассказов</h2>
    <ul>
        @foreach (var book in Model)
        {
            <li>
                <a href="@Url.Action("BookDetails", "Home", new { id = book.id })">
                    @book.title
                </a>
                - @book.genre - @book.written.ToShortDateString() - Рейтинг: @book.rating
            </li>
        }
    </ul>
  <form method="post" action="@Url.Action("Logout", "Account")">
        @Html.AntiForgeryToken()
        <button type="submit">Выход</button>
    </form>

</body>
</html>
